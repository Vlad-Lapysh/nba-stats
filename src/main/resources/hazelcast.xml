<hazelcast xmlns="http://www.hazelcast.com/schema/config"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.hazelcast.com/schema/config
           http://www.hazelcast.com/schema/config/hazelcast-config-5.3.xsd">

    <network>
        <join>
            <multicast enabled="true"/>
        </join>
    </network>

    <serialization>
        <compact-serialization>
            <serializers>
                <serializer>dev.lapysh.infra.serde.ContinuousAverageSerializer</serializer>
                <serializer>dev.lapysh.in.model.PlayerGameDataSerializer</serializer>
                <serializer>dev.lapysh.infra.serde.MapProcessorSerializer</serializer>
            </serializers>
        </compact-serialization>
    </serialization>

    <executor-service name="ExecutorOfMapEntryProcessor">
        <pool-size>10</pool-size>
        <queue-capacity>10000</queue-capacity>
    </executor-service>

    <map name="playerDataMap">
        <in-memory-format>OBJECT</in-memory-format>
        <!-- EAGER: Map operations are blocked until the MapStore loads all partitions. -->
        <map-store enabled="true" initial-mode="EAGER">
            <!-- write-behind -->
            <write-delay-seconds>5</write-delay-seconds>
            <class-name>dev.lapysh.init.PlayerStatisticsMapStore</class-name>
        </map-store>
    </map>

    <map name="teamDataMap">
        <in-memory-format>OBJECT</in-memory-format>
        <map-store enabled="true" initial-mode="EAGER">
            <write-delay-seconds>5</write-delay-seconds>
            <class-name>dev.lapysh.init.TeamStatisticsMapStore</class-name>
        </map-store>
    </map>

</hazelcast>
