plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.0"
//    id("com.google.cloud.tools.jib") version "2.8.0"
    id("io.micronaut.aot") version "4.4.0"
}

version = "0.1"
group = "dev.lapysh"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("org.projectlombok:lombok")
    compileOnly("org.projectlombok:lombok")
    developmentOnly("io.micronaut.controlpanel:micronaut-control-panel-management")
    developmentOnly("io.micronaut.controlpanel:micronaut-control-panel-ui")
    implementation("com.fasterxml.jackson.module:jackson-module-afterburner:2.17.1")
    implementation("commons-io:commons-io:2.16.1")
    implementation("io.micrometer:context-propagation")
    implementation("io.micronaut.cache:micronaut-cache-hazelcast")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
//    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
//    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-management")
    implementation("io.r2dbc:r2dbc-pool")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.jooq:jooq:3.19.9")
    implementation("org.postgresql:postgresql")
    implementation("org.postgresql:r2dbc-postgresql")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
//    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("org.testcontainers:postgresql")
//    testImplementation("io.micronaut.reactor:micronaut-reactor-http-client")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("io.micronaut.test:micronaut-test-rest-assured")
    testImplementation("io.rest-assured:rest-assured")
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.awaitility:awaitility:4.2.1")
    testImplementation("org.junit.platform:junit-platform-suite-engine")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")
}

application {
    mainClass = "dev.lapysh.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("22")
    targetCompatibility = JavaVersion.toVersion("22")
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(22))
    }
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("dev.lapysh.*")
    }
    aot {
        deduceEnvironment = true
    }
}

tasks.named("dockerfileNative") {
    jdkVersion = "22"
}

tasks.withType(JavaExec) {
    jvmArgs = ['-XX:+UseZGC']
}
